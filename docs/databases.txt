PRAGMA foreign_keys = OFF;
drop table if exists  Environments;
drop table if exists Encounters;
PRAGMA foreign_keys = ON;

 -- Environments Table
CREATE TABLE IF NOT EXISTS Environments (
    EnvironmentID INTEGER PRIMARY KEY,
    Name TEXT	CHECK( Name  IN  ("FOREST",
	                                                                   "CAVES",
																	   "CITY_EXTERIOR",
																	   "CITY_INTERIOR",
																	   "CRYPT",
																	   "DESERT",
																	   "SEWER",
																	   "SNOW",
																	   "DUNGEON",
																	   "UNDERDARK",
																	   "RUINS",
																	   "HAUNTED") )
);

 -- Adding environments
 INSERT INTO Environments ( Name ) values
 ("CAVES"), ( "FOREST") ,("RUINS"), ("HAUNTED"),("CITY_EXTERIOR"), ("CITY_INTERIOR"),
 ("DUNGEON"),("CRYPT"), ("DESERT"), ("SNOW"), ("UNDERDARK"), ("SEWER");
select * from Environments;

 CREATE TABLE IF NOT EXISTS Encounters (
    EncounterID INTEGER PRIMARY KEY,
	LVL INTEGER,
    CreatureID INTEGER,
    EnvironmentID INTEGER,
    FOREIGN KEY (CreatureID) REFERENCES creatures(id),
    FOREIGN KEY (EnvironmentID) REFERENCES Environments(EnvironmentID)
);


SELECT 
 CreatureID, TemplateResRef, ChallengeRating
FROM Encounters
JOIN Creatures ON Encounters.CreatureID = Creatures.id and Encounters.LVL < 10
JOIN Environments ON Encounters.EnvironmentID = Environments.EnvironmentID
WHERE Environments.Name = 'FOREST' order by random();
